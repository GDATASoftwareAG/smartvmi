---
name: CPP CI

on:
  push:
    branches:
      - "main"
    paths:
      - '**.h'
      - '**.cpp'
      - '**/CMakeLists.txt'
      - '**/CMakePresets.json'
      - '**/.clang-tidy'
      - '**/.clang-format'
  pull_request:
    branches:
      - "main"
    paths:
      - '**.h'
      - '**.cpp'
      - '**/CMakeLists.txt'
      - '**/CMakePresets.json'
      - '**/.clang-tidy'
      - '**/.clang-format'

jobs:
  format:
    runs-on: ubuntu-latest
    container:
      image: gdatacyberdefense/clang-format:14

    steps:
      - uses: actions/checkout@v3

      - name: Perform C++ format check
        run: find . -iname *.h -o -iname *.cpp | xargs clang-format --style=file --dry-run --Werror

  build_core:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Build and test vmicore
        run: |
          cmake --preset clang-debug
          cmake --build --preset clang-build-debug
          ctest --preset clang-test
        working-directory: vmicore

  build_inmemoryscanner:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Build and test inmemoryscanner
        run: |
          cmake --preset clang-debug
          cmake --build --preset clang-build-debug
          ctest --preset clang-test
        working-directory: plugins/inmemoryscanner

  build_apitracing:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Build and test apitracing
        run: |
          cmake --preset clang-debug
          cmake --build --preset clang-build-debug
          ctest --preset clang-test
        working-directory: plugins/apitracing

  build_template:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Build and test template
        run: |
          cmake --preset clang-debug
          cmake --build --preset clang-build-debug
          ctest --preset clang-test
        working-directory: plugins/template
