---
name: CPP CI

on:
  push:
    branches:
      - "main"
    paths:
      - '**.h'
      - '**.cpp'
      - '**/CMakeLists.txt'
      - '**/CMakePresets.json'
      - '**/.clang-tidy'
      - '**/.clang-format'
  pull_request:
    branches:
      - "main"
    paths:
      - '**.h'
      - '**.cpp'
      - '**/CMakeLists.txt'
      - '**/CMakePresets.json'
      - '**/.clang-tidy'
      - '**/.clang-format'

jobs:
  format:
    runs-on: ubuntu-latest
    container:
      image: gdatacyberdefense/clang-format:14

    steps:
      - uses: actions/checkout@v3

      - name: Perform C++ format check
        run: find . -iname *.h -o -iname *.cpp | xargs clang-format --style=file --dry-run --Werror

  test_core:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Test vmicore
        run: |
          cmake --preset gcc-debug -D VMICORE_TEST_COVERAGE:BOOL=ON
          cmake --build --preset gcc-build-debug --target vmicore-test
          ctest --preset gcc-test
          cd build-gcc-debug
          gcovr -r .. -x -o cobertura.xml
        working-directory: vmicore

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage_vmicore
          path: vmicore/build-gcc-debug/cobertura.xml

  build_core:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Build vmicore
        run: |
          cmake --preset clang-debug
          cmake --build --preset clang-build-debug --target vmicore
        working-directory: vmicore

  test_inmemoryscanner:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Test inmemoryscanner
        run: |
          cmake --preset gcc-debug -D INMEMORYSCANNER_TEST_COVERAGE:BOOL=ON
          cmake --build --preset gcc-build-debug --target inmemoryscanner-test
          ctest --preset gcc-test
          cd build-gcc-debug
          gcovr -r .. -x -o cobertura.xml
        working-directory: plugins/inmemoryscanner

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage_inmemoryscanner
          path: plugins/inmemoryscanner/build-gcc-debug/cobertura.xml

  build_inmemoryscanner:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/gdatasoftwareag/vmi-build

    steps:
      - uses: actions/checkout@v3

      - name: Build inmemoryscanner
        run: |
          cmake --preset clang-debug
          cmake --build --preset clang-build-debug --target inmemoryscanner
        working-directory: plugins/inmemoryscanner
